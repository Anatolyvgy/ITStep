// 21 декабря Сергей Градович
// как отправлять домашние задания
// желательно не подключать лишние include
// нужно обьявлять переменные максимально близко к области их использования 
// const ставим справа от типа
// ctrl+alt+F7 - пересборка проекта 
// многострочное редактирование кода - удерживая alt выделить мышью что надо
// имя Enum-a  с большой буквы и имя значений Enum-a тоже, чтобы не было похоже на 
// переменную
// default обычно требуют ставить обязательно
// Чтобы выйти из программы можно использовать return с кодом 1 (return 1) или exit ( но
// нужно подключить <stdlib.h> )
Логические операторы, операторы ветвления
( switch, enum )

Оператор множественного выбора switch


//#include <stdio.h>
//#include<stdbool.h>
//enum Color    //константный перечисляемый тип
//{
//	None = -1,
//	Red = 0,
//	Orange,
//	Yellow,
//	Green,
//};
//int main()
//{
//	enum Color color = None;//переменная color типа Color
//	printf("Please enter color code ( 0 for 4 )\n");
//	scanf("%i", &color);
//	switch (color)//имя переменной нужно набрать вручную ( подсветится красным и 
//		// нажать Enter - Intellisence нарисует блок со значениями enum )
//	{
//	case None:
//		printf("Color name: None\n");
//		break;
//	case Red:
//		printf("Color name: Red\n");
//		break;
//	case Orange:
//		printf("Color name: Orange\n");
//		break;
//	case Yellow:
//		printf("Color name: Yellow\n");
//		break;
//	case Green:
//		printf("Color name: Green\n");
//		break;
//	default:
//		printf("this color is not available\n");
//		break;		
//		
//	}
//	return 0;
//}
#include<stdio.h>
#include<locale.h>
enum Sity
{
	Gomel = 1 ,
	Brest,
	Orsha,
	Vitebsk,
	Mogilev
};
int main()
{
	int gomel = 7;
	int brest = 15;
	int orsha = 5;
	int vitebsk = 12;
	int mogilev = 21;
	int number_of_tickets = 0;
	setlocale(LC_ALL, "rus");
	printf("Введите количество билетов :\n");
	scanf("%i", &number_of_tickets);
	if (number_of_tickets == 0)
	{
		printf(" Мы не можем продать 0 билетов\n\
Попробуйте еще раз\n");		
	}
	if (number_of_tickets >= 100)
	{
		printf("Вы получаете скидку 10%% \n");		
	}
	printf("Введите направление:\n");
	printf(" Гомель____1\n Брест_____2\n Орша______3\n Витебск___4\n Могилев___5\n\n");
	printf(" Стоимость билетов:\n Гомель____%i  рублей\n Брест_____%i рублей \n\
 Орша______%i  рублей\n Витебск___%i рублей \n Могилев___%i рублей\n", gomel, brest,
		orsha, vitebsk, mogilev);
	enum Sity sity = 0;
	scanf("%i", &sity);
	switch (sity)
	{
	case Gomel:
		printf("Вы выбрали направление: Гомель\n");
		printf("Количество билетов: %i\n", number_of_tickets);
		if (number_of_tickets >= 100)
		{			
			number_of_tickets = number_of_tickets - (number_of_tickets / 10);
		}
		printf("Сумма к оплате составляет %i рублей\n", number_of_tickets * gomel);
		break;
	case Brest:
		printf("Вы выбрали направление: Брест\n");
		printf("Количество билетов: %i\n", number_of_tickets);
		if (number_of_tickets >= 100)
		{
			number_of_tickets = number_of_tickets - (number_of_tickets / 10);
		}
		printf("Сумма к оплате составляет %i рублей\n", number_of_tickets * brest);
		break;
	case Orsha:
		printf("Вы выбрали направление: Орша\n");
		printf("Количество билетов: %i\n", number_of_tickets);
		if (number_of_tickets >= 100)
		{
			number_of_tickets = number_of_tickets - (number_of_tickets / 10);
		}
		printf("Сумма к оплате составляет %i рублей\n", number_of_tickets * orsha);
		break;
	case Vitebsk:
		printf("Вы выбрали направление: Витебск\n");
		printf("Количество билетов: %i\n", number_of_tickets);
		if (number_of_tickets >= 100)
		{
			number_of_tickets = number_of_tickets - (number_of_tickets / 10);
		}
		printf("Сумма к оплате составляет %i рублей\n", number_of_tickets * vitebsk);
		break;
	case Mogilev:
		printf("Вы выбрали направление: Могилев\n");
		printf("Количество билетов: %i\n", number_of_tickets);
		if (number_of_tickets >= 100)
		{
			number_of_tickets = number_of_tickets - (number_of_tickets / 10);
		}
		printf("Сумма к оплате составляет %i рублей\n", number_of_tickets * mogilev);
		break;
	default:
		printf("В этом направлении наши поезда не ходят\n");
		break;
	}
	return 0;	
}


